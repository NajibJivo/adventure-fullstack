# Workflow-navn som vises i Actions
name: Build and Publish to GHCR

# Kør på push til main
on:
  push:
    branches: [ main ]

# Fælles env-variabler til genbrug
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Ét job der tester og publicerer
  test-and-publish:
    # GitHub-hostet Ubuntu runner
    runs-on: ubuntu-latest
    # Læs repo, skriv til Packages (GHCR)
    permissions:
      contents: read
      packages: write

    steps:
      # Hent koden fra repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Installer JDK 21 (Temurin)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Cache Maven-dependencies for hurtigere builds
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          # Cache-key bundet til OS + pom.xml hash
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          # Fallback hvis exact key mangler
          restore-keys: ${{ runner.os }}-m2

      # Gør Maven wrapper eksekverbar
      - name: Make mvnw executable
        run: chmod +x ./mvnw

      # Kør tests (fail stopper pipeline)
      - name: Run Maven tests
        run: ./mvnw clean test

      # Build artefakt uden at køre tests igen
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      # Log ind i GitHub Container Registry (GHCR)
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Tving repo-navn til lowercase (krav for GHCR tags)
      - name: Generate lowercase repo name
        id: repo
        run: echo "repository=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # Byg og push Docker-image til GHCR (latest + commit-SHA)
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.repository }}:latest
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.repository }}:${{ github.sha }}
