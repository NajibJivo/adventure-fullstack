services:                                 # Alle containere i dette projekt
  mysql:                                  # MySQL-databaseservice
    image: mysql:8.0                      # Officiel MySQL 8-image
    container_name: adventurexp-mysql     # Navn på containeren (nemmere i logs/ps)
    restart: unless-stopped               # Genstart hvis den stopper uventet
    environment:                          # Init-bruger/DB credentials
      MYSQL_ROOT_PASSWORD: rootpassword   # Root password (kun til lokal dev)
      MYSQL_DATABASE: adventurexp          # Opret denne database ved opstart
      MYSQL_USER: appuser                 # App-bruger (ikke-root)
      MYSQL_PASSWORD: apppassword         # App-brugerens password
    volumes:                              # Persistér data lokalt (over container-liv)
      - mysql_data:/var/lib/mysql         # Navngivet volume til MySQL data
     # - ./initData.sql:/docker-entrypoint-initdb.d/initData.sql
    networks:
      - adventurexp-net                   # Privat netværk mellem services
    healthcheck:                          # Vent til DB svarer før app starter
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-prootpassword"]
      interval: 5s                        # Hvor ofte healthcheck køres
      timeout: 3s                         # Hvor længe vi venter på svar
      retries: 30                         # Hvor mange forsøg før “unhealthy”
      start_period: 20s                   # “Grace period” ved kold start

  app:                                    # Spring Boot-applikationen
    build: .                              # Byg Docker image fra Dockerfile i projektroden
    container_name: adventurexp-app       # Navn på app-container
    restart: unless-stopped               # Genstart hvis den dør
    ports:
      - "8080:8080"                       # Eksponér app på hostens port 8080
    environment:                          # Spring-konfiguration via env vars
      SPRING_PROFILES_ACTIVE: docker      # Brug evt. application-docker.properties
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/adventurexp?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      # JDBC URL—'mysql' = service-navn som host
      SPRING_DATASOURCE_USERNAME: appuser # Skal matche MySQL env ovenfor
      SPRING_DATASOURCE_PASSWORD: apppassword
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate   # Lad Flyway styre schema, ikke Hibernate
      SPRING_FLYWAY_ENABLED: "true"       # Sikrer Flyway kører ved opstart
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration  # Sti til migrations i jar’en
    depends_on:
      mysql:
        condition: service_healthy        # Start først når MySQL er “healthy”
    networks:
      - adventurexp-net                   # Del samme netværk som MySQL

volumes:
  mysql_data:                             # Deklaration af navngivet volumen til DB

networks:
  adventurexp-net:                        # Privat bridge-netværk til projektet
    driver: bridge
